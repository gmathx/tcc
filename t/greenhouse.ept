node shift(time:int) returns (d:bool)
let
	automaton
		state A do
			d = true;
		unless time = 2 then B
			 | time = 3 then C

		state B do
			d = true;
		unless time = 1 then A
			 | time = 3 then C

		state C do
			d = true;
		unless time = 1 then A
			 | time = 2 then B
	end
tel

node greenhouse(time:int) returns (heating_on,cooling_on:bool)
contract
	var too_hot,too_cold,both_on,d,m,a,n,t1,t2:bool;
	let
		too_hot = (heating_on & t_in > 35);
		too_cold = (cooling_on & t_in < 5);
		both_on = (heating_on & cooling_on);
		(d,m,a,n) = shift(time);
		t1 = ((d & t_in < 20) or (m & t_in < 15) or (a & t_in < 10) or (n & t_in < 25));
		t2 = ((d & t_in > 25) or (m & t_in > 20) or (a & t_in > 15) or (n & t_in > 30));
	tel
	enforce (not (too_hot or too_cold or both_on) & (not t1 or heating_on) & (not t2 or cooling_on))
	with(c1,c2:bool)
let
	heating_on = inlined heating(c1);
	cooling_on = inlined cooling(c2);
tel