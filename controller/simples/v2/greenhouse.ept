node heating(c:bool) returns (status:bool)
let
	automaton
		state Off do
			status = false;
		unless not c then On

		state On do
			status = true;
		unless c then Off
	end
tel

node cooling(c:bool) returns (status:bool)
let
	automaton
		state Off do
			status = false;
		unless not c then On

		state On do
			status = true;
		unless c then Off
	end
tel

node greenhouse(crop,t_in,time:int) returns (heating_on,cooling_on:bool)
contract
	var t1,t2,t3,t4:bool;
	let
		(* t1 = (time >= 2 & time <= 5); *)
		t1 = (time >= 2 & time <= 5);
		

		(* sigali nao consegue sintetizar o controlador sem a regra "not t1" abaixo *)
		(* t2 = (not t1 & time >= 12 & time <= 15); *)
		t2 = (not t1 & time > 12 & time < 14);

		t3 = (not t1 or (heating_on & not cooling_on));
		t4 = (not t2 or (cooling_on & not heating_on));
	tel
	enforce t3 & t4
	with(c1,c2:bool)
let
	heating_on = inlined heating(c1);
	cooling_on = inlined cooling(c2);
tel